#Nginx employs event-based model and OS-dependent mechanisms to efficiently distribute requests among worker processes.

user  nginx;
# Defines user and group credentials used by worker processes. If group is omitted, a group whose name equals that of user is used.
worker_processes  auto;
#Defines the number of worker processes.
#The optimal value depends on many factors including (but not limited to) the number of CPU cores, the number of hard disk drives that store data, and load pattern. When one is in doubt, setting it to the number of available CPU cores would be a good start (the value “auto” will try to autodetect it).
worker_rlimit_nofile 40000;
#Changes the limit on the maximum number of open files (RLIMIT_NOFILE) for worker processes.

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

# The Events Context is used to set global options that affect how Nginx handles connections at a general level
events {
    #Provides the configuration file context in which the directives that affect connection processing are specified.
    worker_connections  8096;
    #Sets the maximum number of simultaneous connections that can be opened by a worker process.
    multi_accept        on;
    use                 epoll;
    #epoll is a connection processing method. For Linux systems, the epoll method is usually the best choice. (https://www.digitalocean.com/community/tutorials/understanding-the-nginx-configuration-file-structure-and-configuration-contexts)
}
# The HTTP context contains all of the directives and other contexts necessary to define how the program will handle HTTP or HTTPS connections.
# While lower contexts get more specific about how to handle requests, directives at this level control the defaults for every virtual server defined within.
http {
    #Provides the configuration file context in which the HTTP server directives are specified.
    include       /etc/nginx/mime.types;
    #MIME types describe the media type of content either in email or served by web servers or web applications and are intended to help guide a web browser in how the content is to be processed and displayed.
    default_type  application/octet-stream;
    #Defines the default MIME type of a response.: unknown content types

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
                      #specifies log format

    access_log  /var/log/nginx/access.log  main;
    #Sets the path, format, and configuration for a buffered log write

    sendfile           on;
    tcp_nopush         on;
    tcp_nodelay        on;
    keepalive_timeout  15;

    include /etc/nginx/conf.d/*.conf;
    # Includes another file. Included files should consist of syntactically correct directives and blocks.
    # file is defined in docker-compose.override.yml
    # this will map: ./<development/production/etc>:/etc/nginx/conf.d (see docker-compose.production.yml), i.e. include the [currently named] tax-automation.conf file
}
