upstream front_tax {
    server front_tax:14000;
}

upstream api {
    ip_hash;
    server api:5000;

    server api:5000;
    server api:5000;
    server api:5000;
        # to scale the app, just add more nodes here!

}

# upstream flower {
#     server flower:8888;
# }

# upstream socketio_nodes {
#     ip_hash;
#     server api:5000;
#     server api:5001;
#     server api:5002;
#     # to scale the app, just add more nodes here!
# }

map $sent_http_content_type $expires {
    "text/html"                         epoch;
    "text/html; charset=utf-8"          epoch;
    default                             off;
}


server {
    listen                              80;
    listen                              [::]:80;
    server_tokens                       off;
    #disables emitting nginx version on error pages
    client_max_body_size                50M;

    gzip                                on;
    gzip_types                          text/plain application/xml text/css application/javascript;
    gzip_min_length                     1000;


    location / {
                                            # every request made / on port 80 will be passed to the front_tax server using the http protocol
        proxy_pass                          http://front_tax;
        proxy_read_timeout                  1m;
        proxy_connect_timeout               75s;
        proxy_http_version	                1.1;
        proxy_cache_bypass	                $http_upgrade;
        proxy_buffering                     off;

        #The proxy headers and other options you see here are just performance optimizations and forwarded headers.
        proxy_redirect                      off;
        proxy_set_header Upgrade			$http_upgrade;
        proxy_set_header Connection 		'';
        #'upgrade';
        proxy_set_header Host				$host;
        proxy_set_header X-Real-IP			$remote_addr;
        proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto	$scheme;
        proxy_set_header X-Forwarded-Host	$host;
        proxy_set_header X-Forwarded-Port	$server_port;

        }

    # http://nginx.org/en/docs/http/websocket.html
    # https://github.com/websockets/ws/issues/979
    location /socket.io {
        # include                             proxy_params;
        proxy_http_version                  1.1;
        proxy_buffering                     off;
        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         'upgrade';
        proxy_set_header Host               $host;
        proxy_pass                          http://api;
    }

}

server {
    listen 5000;
    listen [::]:5000;
    #Sets names of a virtual server
    server_tokens off;
    #disables emitting nginx version on error pages
    client_max_body_size                    500M;

    location / {
                                            # every request made to /api on port 5000 will be passed to the api server using the http protocol
        proxy_pass                          http://api;
        proxy_http_version                  1.1;
        proxy_cache_bypass                  $http_upgrade;
        proxy_buffering                     off;

        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         keep-alive;
        proxy_set_header Host               $host;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        # include /etc/nginx/conf.d/cors-settings.conf;

    }
}

# server {
#     listen 8888;
#     charset utf-8;

#     location / {
#         proxy_pass                          http://flower;
#         proxy_set_header Host               $host;
#         proxy_redirect                      off;
#         proxy_http_version                  1.1;
#         proxy_set_header Upgrade            $http_upgrade;
#         proxy_set_header Connection         'upgrade';
#     }
# }
