###
### BEFORE RUNNING

# DEV SETTINGS:
### nuxt.config.js
#       baseURL: 'http://127.0.0.1:5000',
#       https: false,


# PROD SETTINGS:
### nuxt.config.js
#       baseURL: #'http://api.tax-automation.com' # at the moment false, later --> #'https://api.tax-automation.com',
#       https: false # at the moment false, later --> #true,



version: '3'

services:

    nuxt:
        container_name: nuxt
        build:
            context: ./nuxt
            dockerfile: Dockerfile
            args:
                - NODE_VERSION=${NODE_VERSION}
        image: ${OWNER_NAME}/nuxt:${VERSION_NUMBER}
        restart: always
        expose: # EXPOSE only opens up a port within a docker network, while PORTS allows access from the outside world (the internet)
            - "3000"
        depends_on:
            - api
        networks:
            - web
        command: "npm run start"

    api:
        container_name: api
        build:
            context: ./api
            dockerfile: Dockerfile
            args:
                - PYTHON_VERSION=${PYTHON_VERSION}
        image: ${OWNER_NAME}/api:${VERSION_NUMBER}
        restart: always
        expose:
            - "5000"
        depends_on: # depends_on defines the order in which the services are started
            - postgres
        networks:
            - internal
            - web
        command: bash -c "./wait-for-it.sh postgres:5432 --timeout=2 && gunicorn --bind 0.0.0.0:5000 wsgi:app"

    postgres:
        container_name: postgres
        build:
            context: ./db
            dockerfile: Dockerfile
            args:
                - POSTGRES_VERSION=${POSTGRES_VERSION}
        image: ${OWNER_NAME}/postgres:${VERSION_NUMBER}
        restart: always
        environment:
            - DATABASE=postgres
            - POSTGRES_DB=vat_prod
            - POSTGRES_PASSWORD=1da16a8805f14406f5ad69de0062465e262654a413ca3b29828bd1c598ec0afb
            - POSTGRES_USER=tm
            - POSTGRES_HOST=postgres

        expose:
            - "5432"
        volumes:
            - pgdata:/var/lib/postgresql/data/
        networks:
            - internal

volumes:
    pgdata:

networks:
    internal:
    web:
#         # external:
#         #     name: nginx_web
