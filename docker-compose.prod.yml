version: '3'

services:
    proxy:
        container_name: proxy
        build:
            context: ./nginx
            dockerfile: Dockerfile
            args:
                - NGINX_VERSION=${NGINX_VERSION}
                - ENVIRONMENT=prod
        image: ${OWNER_NAME}/proxy:${VERSION_NUMBER}
        restart: unless-stopped
        ports:
            - 80:80
            - 443:443
        volumes:
            - /home/thomas/data/certbot/conf:/etc/letsencrypt
            - /home/thomas/data/certbot/www:/var/www/certbot
        networks:
            - web
        depends_on:
            - api
        #command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
        # improved version based on: https://stackoverflow.com/questions/57554703/why-use-nginx-with-daemon-off-in-background-with-docker
        command: '/bin/sh -c ''while :; do sleep 6h; nginx -s reload; done & exec nginx -g "daemon off;"'''

    certbot:
        container_name: certbot
        image: certbot/certbot
        restart: unless-stopped
        volumes:
            - /home/thomas/data/certbot/conf:/etc/letsencrypt
            - /home/thomas/data/certbot/www:/var/www/certbot
        networks:
            - web
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


                                                                # --email no-reply@tax-automation.com

    api:
        env_file:
            - .prod.env

    nuxt:
        env_file:
            - .prod.env

    postgres:
        env_file:
            - .prod.env

networks:
    internal:
    web:
        # external:
        #     name: nginx_web
